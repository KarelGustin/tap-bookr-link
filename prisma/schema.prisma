generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id                                                    String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                               String            @db.Uuid
  handle                                                String            @unique
  onboarding_completed                                  Boolean?          @default(false)
  onboarding_step                                       Int?              @default(1)
  name                                                  String?
  is_business                                           Boolean?          @default(false)
  slogan                                                String?
  avatar_url                                            String?
  accent_color                                          String?           @default("#6E56CF")
  theme_mode                                            String            @default("light")
  booking_url                                           String?
  booking_mode                                          String            @default("embed")
  use_whatsapp                                          Boolean?          @default(false)
  whatsapp_number                                       String?
  about                                                 Json              @default("{}")
  media                                                 Json              @default("{\"items\": []}")
  socials                                               Json              @default("{}")
  contact                                               Json              @default("{}")
  banner                                                Json              @default("{}")
  footer                                                Json              @default("{}")
  footer_business_name                                  String?
  footer_address                                        String?
  footer_email                                          String?
  footer_phone                                          String?
  footer_hours                                          Json?
  footer_next_available                                 String?
  footer_cancellation_policy                            String?
  footer_privacy_policy                                 String?
  footer_terms_of_service                               String?
  footer_show_maps                                      Boolean?          @default(true)
  footer_show_attribution                               Boolean?          @default(true)
  testimonials                                          Json?             @default("[]")
  preview_expires_at                                    DateTime?         @db.Timestamptz(6)
  preview_started_at                                    DateTime?         @db.Timestamptz(6)
  status                                                String            @default("draft")
  created_at                                            DateTime          @default(now()) @db.Timestamptz(6)
  updated_at                                            DateTime          @default(now()) @updatedAt @db.Timestamptz(6)
  stripe_customer_id                                    String?
  subscription_id                                       String?           @db.Uuid
  subscription_status                                   String?           @default("inactive")
  trial_start_date                                      DateTime?         @db.Timestamptz(6)
  trial_end_date                                        DateTime?         @db.Timestamptz(6)
  grace_period_ends_at                                  DateTime?         @db.Timestamptz(6)
  banner_url                                            String?
  category                                              String?
  invoices                                              invoices[]
  payment_methods                                       payment_methods[]
  subscriptions_profiles_subscription_idTosubscriptions subscriptions?    @relation("profiles_subscription_idTosubscriptions", fields: [subscription_id], references: [id], onUpdate: NoAction)
  subscriptions_subscriptions_profile_idToprofiles      subscriptions[]   @relation("subscriptions_profile_idToprofiles")

  @@index([handle], map: "idx_profiles_handle")
  @@index([onboarding_completed], map: "idx_profiles_onboarding_completed")
  @@index([onboarding_step], map: "idx_profiles_onboarding_step")
  @@index([status], map: "idx_profiles_status")
  @@index([stripe_customer_id], map: "idx_profiles_stripe_customer_id")
  @@index([subscription_id], map: "idx_profiles_subscription_id")
  @@index([subscription_status], map: "idx_profiles_subscription_status")
  @@index([user_id], map: "idx_profiles_user_id")
  @@map("profiles")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoices {
  id                 String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscription_id    String?        @db.Uuid
  profile_id         String?        @db.Uuid
  stripe_invoice_id  String?        @unique
  amount             Int?
  currency           String?        @default("eur")
  status             String?        @default("draft")
  invoice_pdf_url    String?
  hosted_invoice_url String?
  due_date           DateTime?      @db.Timestamptz(6)
  paid_at            DateTime?      @db.Timestamptz(6)
  created_at         DateTime?      @default(now()) @db.Timestamptz(6)
  profiles           Profile?       @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  subscriptions      subscriptions? @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([profile_id], map: "idx_invoices_profile_id")
  @@index([stripe_invoice_id], map: "idx_invoices_stripe_invoice_id")
  @@index([subscription_id], map: "idx_invoices_subscription_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_methods {
  id                       String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscription_id          String?        @db.Uuid
  profile_id               String?        @db.Uuid
  stripe_payment_method_id String?
  type                     String?
  last4                    String?
  brand                    String?
  exp_month                Int?
  exp_year                 Int?
  is_default               Boolean?       @default(false)
  country                  String?
  created_at               DateTime?      @default(now()) @db.Timestamptz(6)
  profiles                 Profile?       @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  subscriptions            subscriptions? @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([profile_id], map: "idx_payment_methods_profile_id")
  @@index([subscription_id], map: "idx_payment_methods_subscription_id")
}

model stripe_events {
  event_id String    @id
  type     String?
  created  DateTime? @db.Timestamptz(6)
  raw      Json?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subscriptions {
  id                                               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile_id                                       String            @db.Uuid
  stripe_subscription_id                           String            @unique
  stripe_customer_id                               String
  status                                           String
  current_period_start                             DateTime          @db.Timestamptz(6)
  current_period_end                               DateTime          @db.Timestamptz(6)
  cancel_at_period_end                             Boolean?          @default(false)
  trial_start                                      DateTime?         @db.Timestamptz(6)
  trial_end                                        DateTime?         @db.Timestamptz(6)
  created_at                                       DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at                                       DateTime?         @default(now()) @db.Timestamptz(6)
  invoices                                         invoices[]
  payment_methods                                  payment_methods[]
  profiles_profiles_subscription_idTosubscriptions Profile[]         @relation("profiles_subscription_idTosubscriptions")
  profiles_subscriptions_profile_idToprofiles      Profile           @relation("subscriptions_profile_idToprofiles", fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([profile_id], map: "idx_subscriptions_profile_id")
  @@index([stripe_customer_id], map: "idx_subscriptions_stripe_customer_id")
  @@index([stripe_subscription_id], map: "idx_subscriptions_stripe_subscription_id")
  @@index([profile_id], map: "subscriptions_profile_idx")
  @@index([stripe_subscription_id], map: "subscriptions_subid_idx")
}
